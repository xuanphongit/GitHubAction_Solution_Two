on:
  workflow_dispatch:
    inputs:
      owner:
        description: 'Repository owner (optional)'
        required: false
        default: ''
      repo_name:
        description: 'Repository name'
        required: true
      visibility:
        description: 'Repository visibility (public or private)'
        required: true
        default: 'public'
      description:
        description: 'Repository description (optional)'
        required: false
        default: ''

jobs:
  create_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Repository Owner
        id: owner_step
        run: |
          if [[ -n "${{ github.event.inputs.owner }}" ]]; then
            echo "owner=${{ github.event.inputs.owner }}" >> $GITHUB_OUTPUT
          else
            echo "owner=${{ github.repository_owner }}" >> $GITHUB_OUTPUT
          fi

      - name: Initialize Git Repository
        run: |
          if [ ! -d ".git" ]; then
            echo "Initializing Git repository..."
            git init
          else
            echo "Git repository already initialized."
          fi

      - name: Create GitHub Repository using GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "Attempting to create repository: ${{ steps.owner_step.outputs.owner }}/${{ github.event.inputs.repo_name }}"
          FULL_REPO_PATH="${{ steps.owner_step.outputs.owner }}/${{ github.event.inputs.repo_name }}"
          
          gh repo create "${FULL_REPO_PATH}" \
            --${{ github.event.inputs.visibility }} \
            ${DESCRIPTION:+--description "${{ github.event.inputs.description }}"} \
            --source=. --push

          if [ $? -eq 0 ]; then
            echo "Successfully created repository: https://github.com/${FULL_REPO_PATH}"
          else
            gh repo view "${FULL_REPO_PATH}" > /dev/null 2>&1
            if [ $? -eq 0 ]; then
              echo "Repository https://github.com/${FULL_REPO_PATH} already exists."
              exit 0
            else
              echo "::error::Failed to create repository ${FULL_REPO_PATH}. Check PAT permissions and input values."
              exit 1
            fi
          fi